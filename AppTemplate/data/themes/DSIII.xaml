<!-- DS3 like  Skin -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Control colors--><!--
    <Color x:Key="PrimaryTextColor">#FFF9F9F9</Color>
    <Color x:Key="PrimaryLightColor">#CCB46228</Color>
    <Color x:Key="SecondaryLightColor">#00B46228</Color>
    <Color x:Key="BorderColor">#ee6b5d3a</Color>
    <Color x:Key="PrimaryDarkBackgroundColor">#000000</Color>
    <Color x:Key="SecondaryDarkBackgroundColor">#030305</Color>
    <Color x:Key="Transparent">#00000000</Color>


    --><!--Color brushes.--><!--
    <SolidColorBrush  x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryTextColor}"/>
    <SolidColorBrush  x:Key="PrimaryLightBrush" Color="{StaticResource PrimaryLightColor}"/>
    <SolidColorBrush  x:Key="SecondaryLightBrush" Color="{StaticResource SecondaryLightColor}"/>
    <SolidColorBrush  x:Key="PrimaryDarkBackgroundBrush" Color="{StaticResource PrimaryDarkBackgroundColor}"/>
    <SolidColorBrush  x:Key="SecondaryDarkBackgroundBrush" Color="{StaticResource SecondaryDarkBackgroundColor}"/>
    <SolidColorBrush  x:Key="TransparentBrush" Color="{StaticResource Transparent}"/>
    <SolidColorBrush  x:Key="BorderBrush" Color="{StaticResource BorderBrush}"/>-->

    <FontFamily x:Key="DS3Font">OptimusPrinceps</FontFamily>
    
    <!--Control colors-->
    <Color x:Key="DS3HoverColor">#CCB46228</Color>
    <Color x:Key="DS3HoverColor2">#00B46228</Color>
    <Color x:Key="DS3TextColor">#FFF9F9F9</Color>
    <Color x:Key="DS3DisabledTextColor">#FF888888</Color>
    <Color x:Key="DS3BackgroundPureBlack">#000000</Color>
    <Color x:Key="DS3BackgroundLigtherBlack">#080810</Color>
    
    <!--Color brushes.-->
    <SolidColorBrush x:Key="DS3HoverBrush" Color="{StaticResource DS3HoverColor}"/>
    <SolidColorBrush x:Key="DS3BorderBrush" Color="#ee6b5d3a"/>
    <SolidColorBrush x:Key="DS3TextBrush" Color="{StaticResource DS3TextColor}"/>
    <SolidColorBrush x:Key="DS3DisabledTextBrush" Color="{StaticResource DS3DisabledTextColor}"/>
    <SolidColorBrush x:Key="DS3BackgroundPureBlackBrush" Color="{StaticResource DS3BackgroundPureBlack}"/>
    <SolidColorBrush x:Key="DS3BackgroundLigtherBlackBrush" Color="{StaticResource DS3BackgroundLigtherBlack}"/>

    <LinearGradientBrush x:Key="DS3HoverButtonPart1" EndPoint="0,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
        <GradientStop Color="{StaticResource DS3HoverColor}"/>
        <GradientStop Color="{StaticResource DS3HoverColor2}" Offset="0.35"/>
        <GradientStop Color="{StaticResource DS3HoverColor2}" Offset="0.65"/>
        <GradientStop Color="{StaticResource DS3HoverColor}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DS3HoverButtonPart2" EndPoint="1,0" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
        <GradientStop Color="{StaticResource DS3HoverColor}"/>
        <GradientStop Color="{StaticResource DS3HoverColor}" Offset="1"/>
        <GradientStop Color="{StaticResource DS3HoverColor2}" Offset="0.8"/>
        <GradientStop Color="{StaticResource DS3HoverColor2}" Offset="0.2"/>
    </LinearGradientBrush>

    <VisualBrush x:Key="hoverButtonBrush">
        <VisualBrush.Visual>
            <Border Background="{StaticResource DS3HoverButtonPart1}">
                <Rectangle Fill="{StaticResource DS3HoverButtonPart2}" Width="1" Height="1" />
            </Border>
        </VisualBrush.Visual>
    </VisualBrush>

    <LinearGradientBrush x:Key="labelBottomBrush"  EndPoint="0,1" MappingMode="RelativeToBoundingBox" StartPoint="1,1">
        <GradientStop Color="#00000000" Offset="0"/>
        <GradientStop Color="{StaticResource DS3TextColor}"  Offset="0.2"/>
        <GradientStop Color="{StaticResource DS3TextColor}" Offset="0.8"/>
        <GradientStop Color="#00000000" Offset="1"/>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="labelBrush" GradientOrigin="0.7,1" Center="0.5,1" RadiusX="0.7" RadiusY="1" Opacity="1">
        <GradientStop Color="{StaticResource DS3HoverColor}" Offset="0.20"/>
        <GradientStop Color="{StaticResource DS3HoverColor2}" Offset="0.85"/>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="textBoxBrush" GradientOrigin="0.7,1" Center="0.5,1" RadiusX="0.7" RadiusY="1" Opacity="0">
        <GradientStop Color="{StaticResource DS3HoverColor}" Offset="0.20"/>
        <GradientStop Color="{StaticResource DS3HoverColor2}" Offset="0.85"/>
    </RadialGradientBrush>
    
        
        <!-- BUTTON -->
    <Style  TargetType="Button">
        <Style.Resources>
            <Storyboard x:Key="animationFading" AutoReverse="True" RepeatBehavior="Forever">
                <DoubleAnimation Storyboard.TargetName="rectangle1"   
                                                             Storyboard.TargetProperty="Opacity"  
                                             By="1" Duration="0:0:1" BeginTime="0:0:0"/>
            </Storyboard>
            <Storyboard x:Key="animationStop">
                <DoubleAnimation Storyboard.TargetName="rectangle1"   
                                                             Storyboard.TargetProperty="Opacity"  
                                             From="0" To="0" Duration="0:0:1"/>
            </Storyboard>
        </Style.Resources>
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DS3Font}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" >
                        <Border x:Name="outerBorder" CornerRadius="0" BorderBrush="{StaticResource DS3BorderBrush}" BorderThickness="1" Padding = "2">
                            <Grid x:Name="grid2" >
                                <Border x:Name="border" CornerRadius="0" BorderBrush="{StaticResource DS3BorderBrush}" BorderThickness="1">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="rectangle1" Fill="{DynamicResource hoverButtonBrush}" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Padding" TargetName="border" Value="2,1,0,0"/>
                            <Setter Property="Background" TargetName="outerBorder" Value="{StaticResource hoverButtonBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="IsMouseOverTrueBeginStoryboard" Storyboard="{StaticResource animationFading}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="IsMouseOverFalseBeginStoryboard" Storyboard="{StaticResource animationStop}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DS3BorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- LABEL -->
    <Style  TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DS3Font}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DS3BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid x:Name="grid2" >
                        <Border x:Name="border" CornerRadius="0" BorderBrush="{StaticResource labelBottomBrush}" BorderThickness="0,0,0,1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource labelBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- BORDER -->
    <Style  TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource DS3BorderBrush}"/>
    </Style>
    <!-- SEPARATOR -->
    <Style  TargetType="Separator">
        <Setter Property="BorderBrush" Value="{StaticResource DS3BorderBrush}"/>
    </Style>

    <!-- TEXTBOX -->
    <Style  TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DS3Font}"/>
        <Setter Property="BorderBrush" Value="{StaticResource labelBottomBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <!-- PASSWORDBOX -->
    <Style  TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DS3Font}"/>
        <Setter Property="BorderBrush" Value="{StaticResource labelBottomBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!-- DATEPICKER -->
    <Style  TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DS3Font}"/>
        <Setter Property="BorderBrush" Value="{StaticResource labelBottomBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type DatePickerTextBox}" >
        <Setter Property="Background" Value="#00000000" />
    </Style>
    
    <!-- CHECKBOX -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DS3Font}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Background" Value="#CCB46228"/>
    </Style>

    <!-- RADIO BUTTON -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DS3Font}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Background" Value="#CCB46228"/>
    </Style>

    <!-- PAGE WINDOW-->
    <Style TargetType="{x:Type Page}">
        <Setter Property="Background" Value="{StaticResource DS3BackgroundLigtherBlackBrush}"/>
    </Style>
    <Style  TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource DS3BackgroundPureBlackBrush}"/>
    </Style>

    <!-- MENU -->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource DS3BackgroundLigtherBlackBrush}"/>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource DS3BackgroundPureBlackBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                       Background="{TemplateBinding BorderBrush}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="14"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                            <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header"/>
                            <ContentPresenter Grid.Column="2" Margin="8,1,8,1" x:Name="IGTHost" ContentSource="InputGestureText" VerticalAlignment="Center"/>
                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource DS3BorderBrush}" BorderThickness="1" Padding="2,2,2,2">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                         <!--Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down--> 
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,1,6,1"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                            <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            <Setter Property="Background" Value="{StaticResource DS3BackgroundLigtherBlackBrush}" TargetName="Border"/>
                        </Trigger>
                         <!--Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,1,6,1"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                         <!--Role = SubMenuHeader : this is a child menu item which does not have children--> 
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                        </Trigger>
                         <!--Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                        </Trigger>
                         <!--If no Icon is present the we collapse the Icon Content--> 
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>
                         <!--The GlyphPanel contains the CheckMark--> 
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>
                          <!--Background="{StaticResource PrimaryLightBrush}"--> 
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{DynamicResource hoverButtonBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DS3BorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource DS3BackgroundPureBlackBrush}"/>
    </Style>

    <!-- STATUS BAR -->
    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Padding="1">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{StaticResource DS3BackgroundLigtherBlack}" Offset="0.0" />
                                        <GradientStop Color="{StaticResource DS3BackgroundPureBlack}" Offset="0.15" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type StatusBarItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource DS3TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <ContentPresenter Margin="1" Name="ContentSite" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PROGRESS BAR RAINBOW-->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource DS3HoverBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DS3BorderBrush}" />
    </Style>


    <!--<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DS3RadioButton}"/>
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource DS3Label}"/>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DS3Button}"/>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DS3TextBox}"/>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DS3CheckBox}"/>
    <Style TargetType="{x:Type Page}" BasedOn="{StaticResource DarkBackgroundPage}"/>
    <Style TargetType="{x:Type Window}" BasedOn="{StaticResource DarkBackgroundWindow}"/>-->

</ResourceDictionary>
